/*
이진 탐색 트리
노드들의 값이 중복되지 않음
왼쪽 노드의 자식 값은 부모의 값보다 작음
오른쪽 자식의 값은 부모의 값 보다 큼
데이터가 추가되면서 한쪽 방향으로 기울어져 균형이 깨질 수 있음
ex)91,92,93,94를 추가하면 오른쪾으로 기울어짐

            A
          /    \
         n      n
        / \     / \
       n   n   n   Max
      / \           
    Min  n       



힙트리 (Heap Tree)

개념
 가장 크거나 작은 값을 빠르게 찾기위해 만든 이진트리
 힙이라고 줄여서 부르기도함

특징
 최대값이 루트인경우, 부모 노드의 값이 무조건 자식 노드의 값보다 큼
 최소값이 루트인경우, 부모 노드의 값이 무조건 자식 노드의 값보다 작음
 완전 이진트리로 이루어져야함
 노드의 개수를 알면 트리 구조를 알 수 있음.
 배열을 사용하여 힙 트리 구조를 바로 표현할 수 있음.
 ex)
 왼쪽 자식의 인덱스 = (2*i) + 1
 오른쪽 자식의 인덱스 = (2*i) + 2
 부모의 인덱스 = (i-1)/2 

데이터 삽입 과정

최소값이 루트인경우를 가정
1. 가장 끝의 자리에 노드를 삽입
2. 그 노드와 부모 노드의 값을 비교
3. 힙 트리 규칙에 맞으면 그대로두고 그렇지 않으면 부모노드와 교환
4. 힙 트리 규칙에 맞을 때까지 3번 과정 반복

데이터 삭제 과정
최댓값 또는 최솟값이 저정된 루트 노드만 제거 가능
최소값이 루트인 경우로 가정
1. 루트노드 제거
2. 루트 자리에 가장 마지막 노드 삽입
3. 루트 자리에 올라간 노드와 그의 자식 노드를 비교
4. 조건에 만족하면 그대로 두고, 그렇지 않으면 자식과 교환
 ! 자식 노드들이 전부 조건을 만족할 경우, 두자식중 더 작은 자식과 교환
  (최대 값이 루트인경우 두자식중 더큰 자식과 교환)
5. 힙트리 규칙에 맞을 때까지 4번 과정 반복
*/

