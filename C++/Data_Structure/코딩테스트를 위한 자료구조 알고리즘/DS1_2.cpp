/*
연속된 자료구조

자료구조에서는 배열의 전체 크기에 상관없이 일정한 접근신간을 같는다. 시간복잡도는 O(1)로 표기한다.

배열의 유형으로는 정적(static) 동적(dynamic) 배열로 나뉜다.
정적배열은 블럭이 끝나면 자동으로 소멸고 동적배열은 프로그래머가 생성과 소멸을 결정할 수 있다.

정적배열은 int arr[size]; 형태로 선언한다.
C에서 동적배열은 int* arr = (int*)malloc(size * sizeof(int)); 형태로 선언
C++에서 동적배열은 int* arr = new int[size]; 형태로 선언

정적배열은 스택(stack)메모리에 할당되기 때문에 함수를 벗어날 때 자동으로 해제됨
반면에 동적배열은 힙(heap)메모리에 할당되며 사용자가 직접 해제하기 전까지 유지됨

연결된 자료구조

연결된 자료구조는 Node를 가지며 서로 다른 메모리에 저장된다.
각 노드는 저장할 데이터와 다음 노드를 가르키는 포인터(next)를 가지고있다.

맨마지막 노드는 다음 노드의 포인터 대신 자료구조의 끝을 나타내는 NULL을 가집니다.
헤드부터 원하는 노드에 도착할때까지 next포인터를 따라서 이동해야한다.
그러므로 i번째 원소에 접근하려면 연결리스트 내부를 i번 이동하는 작업이 필요하므로 시간 복잡도 O(n)으로 표기한다.

배열과 달리 연결리스트는 포인터를 이용해 원소삽입 또는 삭제가 매우 빠르게 수행할 수 있다.

*/

